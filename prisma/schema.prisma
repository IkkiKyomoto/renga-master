// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

//deploy

generator client {
  provider = "prisma-client-js"
}


datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
  id        String   @id @default(dbgenerated("uuid_generate_v4()"))
  email     String   @unique
  password  String
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  hokkus    Hokku[]
  tsukekus  Tsukeku[]
  likes     Like[]
}

model Hokku {
  id        String   @id @default(dbgenerated("uuid_generate_v4()"))
  description     String?
  user    User     @relation(fields: [userId], references: [id])
  userId  String
  ikku String
  niku String
  sanku String
  tsukeku Tsukeku[]
  renga Renga[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Tsukeku {
  id        String   @id @default(dbgenerated("uuid_generate_v4()"))
  description     String?
  user    User     @relation(fields: [userId], references: [id])
  userId  String
  hokku    Hokku     @relation(fields: [hokkuId], references: [id])
  hokkuId  String
  yonku String
  gokku String
  renga Renga[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Renga {
  id        String   @id @default(dbgenerated("uuid_generate_v4()"))
  description     String?
  hokku    Hokku     @relation(fields: [hokkuId], references: [id])
  hokkuId  String
  tsukeku    Tsukeku     @relation(fields: [tsukekuId], references: [id])
  tsukekuId  String
  likes     Like[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Like {
  id        String   @id @default(dbgenerated("uuid_generate_v4()"))
  user    User     @relation(fields: [userId], references: [id])
  userId  String
  renga    Renga     @relation(fields: [rengaId], references: [id])
  rengaId  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}